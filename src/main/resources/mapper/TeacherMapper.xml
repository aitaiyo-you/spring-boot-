<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.TeacherDao">
    <select id="login" parameterType="com.example.entity.Teacher" resultType="com.example.entity.Teacher">
        SELECT teacher.*, college.`name` FROM teacher, college
        WHERE teacher.`cid`=college.`id` AND teacher.`tno`=#{tno} AND teacher.`pass`=#{pass}
    </select>
    <select id="queryAll" parameterType="com.example.entity.Teacher" resultType="com.example.entity.Teacher">
        SELECT teacher.*, college.`name` FROM teacher, college
        WHERE teacher.`cid`=college.`id` AND college.`name`=#{college} AND teacher.`position`!='院长'
    </select>
    <select id="queryById" parameterType="com.example.entity.Teacher" resultType="com.example.entity.Teacher">
        SELECT teacher.*, college.`name` FROM teacher, college
        WHERE teacher.`cid`=college.`id` AND tid=#{tid}
    </select>
    <select id="queryByTno" parameterType="com.example.entity.Teacher" resultType="com.example.entity.Teacher">
        SELECT teacher.*, college.`name` FROM teacher, college
        WHERE teacher.`cid`=college.`id` AND tno=#{tno}
    </select>
    <update id="update" parameterType="com.example.entity.Teacher">
        UPDATE teacher set birthday = #{birthday}, sex=#{sex}, phone=#{phone}, address=#{address}
        WHERE tno=#{tno}
    </update>
    <update id="updatePass" parameterType="com.example.entity.Teacher">
        UPDATE teacher set pass=#{pass}
        WHERE tno=#{tno} AND pass=#{oldPwd}
    </update>
    <select id="queryAllCourse" parameterType="com.example.entity.Teacher" resultType="com.example.entity.Course">
        SELECT * FROM course WHERE course.`cid` NOT IN (SELECT cid FROM teacher_course)
    </select>
    <select id="queryCourseByTno" parameterType="com.example.entity.Teacher" resultType="com.example.entity.Course">
        SELECT course.*, teacher.`tname` FROM course, teacher, teacher_course
        WHERE teacher_course.`cid`=course.`cid` AND teacher.`tid`=teacher_course.`tid` AND teacher.`tno`=#{tno}
    </select>
    <insert id="addTeacherCourse" parameterType="com.example.entity.Teacher_Course">
        INSERT INTO teacher_course (cid, tid) values (#{cid}, #{tid})
    </insert>
    <update id="updateCourseTime" parameterType="com.example.entity.Course">
        UPDATE course set time=#{time} WHERE cid=#{cid}
    </update>
    <select id="queryAllStudent" parameterType="String" resultType="com.example.entity.Student">
        SELECT student.*, profession.`pname`, college.`name` FROM student, profession, college
        WHERE student.`pid` = profession.`pid` AND profession.`college` = college.`id` AND college.`name` = #{college}
    </select>
    <select id="queryAllClass" parameterType="String" resultType="com.example.entity.Profession">
        SELECT profession.* FROM profession, college
        WHERE profession.`college` = college.`id` AND college.`name` = #{college}
    </select>
    <delete id="deleteByTno" parameterType="String">
        DELETE FROM teacher WHERE tno=#{tno}
    </delete>

    <update id="updateByTeacher" parameterType="com.example.entity.Teacher">
        UPDATE teacher set tname=#{tname}, tno=#{tno}, position=#{position}
        WHERE tid=#{tid}
    </update>

    <insert id="addTeacher" parameterType="com.example.entity.Teacher">
        INSERT INTO teacher (tname, tno, cid, position) values (#{tname}, #{tno}, #{cid}, #{position})
    </insert>

    <delete id="deleteAll" parameterType="list">
        DELETE FROM teacher where tid in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            ${id}
        </foreach>
    </delete>
</mapper>